{
	"info": {
		"_postman_id": "556d27c1-7861-4a11-887a-942aa0d26088",
		"name": "WB-Charger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "testAdminOverCharger",
			"item": [
				{
					"name": "AppStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"App message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Wallbox Challenge API REST is up and running!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wbAppURL}}",
							"host": [
								"{{wbAppURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "adminToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"accesstoken\", jsonData.jwt);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@wallbox.com\",\r\n    \"password\": \"admin1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{wbAppURL}}/signin",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "getChargers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wbAppURL}}/chargers",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"chargers"
							]
						}
					},
					"response": []
				},
				{
					"name": "createCharger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var chargerUid = jsonData.charger;\r",
									"postman.setEnvironmentVariable(\"uidcharger\", chargerUid.uid);\r",
									"\r",
									"pm.test(\"Message check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Charger registered\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serialNumber\": \"12345\",\r\n  \"model\": \"Quasar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{wbAppURL}}/chargers",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"chargers"
							]
						}
					},
					"response": []
				},
				{
					"name": "getChargersDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check Serial Number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.serialNumber).to.eql(12345);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{wbAppURL}}/chargers/{{uidcharger}}",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"chargers",
								"{{uidcharger}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCharger(serialnumber)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check Update Message\", function () {\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.expect(jsonData.message).to.eql(\"Charger updated\");\r",
									"});\r",
									"pm.test(\"Check New SerialNumber\", function () {\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"var chargerData = jsonData.charger;\r",
									"    pm.expect(chargerData.serialNumber).to.eql(54321);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serialNumber\": \"54321\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{wbAppURL}}/chargers/{{uidcharger}}",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"chargers",
								"{{uidcharger}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCharger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is success\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{wbAppURL}}/chargers/{{uidcharger}}",
							"host": [
								"{{wbAppURL}}"
							],
							"path": [
								"chargers",
								"{{uidcharger}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}